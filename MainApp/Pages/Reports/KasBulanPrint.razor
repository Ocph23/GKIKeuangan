@using MainApp.Models
<div class="just-print">
    <div style="width:100%; padding:10px; display:flex; border-bottom: 1px solid gray">
        <img style="margin-right:10px;width:50px; height:50px" src="logogki.png" />
        <div style=" width:100%; display:flex; justify-content:start;align-items:start;flex-direction:column">
            <h4>GEREJA INJILI DI TANAH PAPUA</h4>
            <h4>KLASIS PORT NUMBAY</h4>
            <h4>JEMAAT EFRATA KAYU BATU</h4>
        </div>
    </div>
    <div style="display:flex;justify-content:center; align-items:center;flex-direction:column; margin:20px">
        <h3>BUKU KAS UMUM GEREJA </h3>
        <h6 style="font-size:10px">@($"BULAN {Helper.GetBulan(PeriodeKas.Bulan)} {PeriodeKas.Periode.Tahun}")</h6>
    </div>

    @if (Datas.Count() > 0)
    {
        <table>
            <tr>
                <th style="width:40px">No</th>
                <th>Tanggal</th>
                <th>Uraian</th>
                <th>Bukti Kas</th>
                <th>Ayat</th>
                <th>Penerimaan</th>
                <th>Pengeluaran</th>
                <th>Catatan</th>
            </tr>

            @foreach (var item in Datas.Cast<Kas>().Select((r, i) => new { data = r, index = i }))
            {
                <tr>
                    <td style="text-align:center">@(item.index + 1)</td>
                    <td>@item.data.Tanggal.Value.ToString("dd-MM-yyyy")</td>
                    <td>@item.data.Akun.Uraian</td>
                    <td></td>
                    <td>@item.data.Akun.Kode</td>
                    <td style="text-align:end">@(item.data.Akun.Tipe == AkunType.Penerimaan ? item.data.Jumlah.ToString("N2") : "")</td>
                    <td style="text-align:end">@(item.data.Akun.Tipe == AkunType.Pengeluaran ? item.data.Jumlah.ToString("N2") : "")</td>
                    <td style="text-align:end">@(item.data.Catatan)</td>
                </tr>
            }

            <tr>
                <th colspan="5" style="text-align:left">Jumlah Bulan Ini</th>
                <th style="text-align:end">@(Datas.Where(x => x.Akun.Tipe == AkunType.Penerimaan).Sum(x => x.Jumlah).ToString("N2"))</th>
                <th style="text-align:end">@(Datas.Where(x => x.Akun.Tipe == AkunType.Pengeluaran).Sum(x => x.Jumlah).ToString("N2"))</th>
                <th></th>
            </tr>
            <tr>
                <th colspan="5" style="text-align:left">Jumlah Bulan Lalu</th>
                <th style="text-align:end">@(PeriodeKas.SaldoLalu.ToString("N2"))</th>
                <th></th>
                <th></th>
            </tr>

            <tr>
                <th colspan="5" style="text-align:left">Jumlah Semua</th>
                <th style="text-align:end">@((PeriodeKas.SaldoLalu + Datas.Where(x => x.Akun.Tipe == AkunType.Penerimaan).Sum(x => x.Jumlah)).ToString("N2"))</th>
                <th></th>
                <th></th>
            </tr>

            <tr>
                <th colspan="6" style="text-align:left">Saldo</th>
                <th style="text-align:end">
                    @((PeriodeKas.SaldoLalu + Datas.Where(x => x.Akun.Tipe == AkunType.Penerimaan).Sum(x => x.Jumlah) - Datas.Where(x => x.Akun.Tipe == AkunType.Pengeluaran).Sum(x => x.Jumlah)).ToString("N2"))
                </th>
                <th></th>
            </tr>

        </table>
    }
</div>

@code {

    [Parameter]
    public IEnumerable<Kas> Datas { get; set; } = Enumerable.Empty<Kas>();

    [Parameter]
    public PeriodeKas PeriodeKas { get; set; }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }




   

}
